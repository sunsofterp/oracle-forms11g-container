name: Build Oracle Forms 11g Docker Image

on:
  push:
    branches: [ main, master ]
    paths:
      - 'Dockerfile'
      - 'docker-entrypoint.sh'
      - 'scripts/**'
      - 'build.sh'
      - '.github/workflows/build-image.yml'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      push_to_registry:
        description: 'Push image to registry'
        required: false
        default: false
        type: boolean
      registry:
        description: 'Registry URL (e.g., ghcr.io)'
        required: false
        default: 'ghcr.io'
        type: string

env:
  IMAGE_NAME: oracle-forms
  IMAGE_TAG: 11.1.2.2.0
  S3_BUCKET: sunsofterpsetupfiles

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Download required files from S3
      run: |
        echo "Downloading required files from S3 bucket: $S3_BUCKET"
        
        # Download JDK 7
        echo "Downloading JDK 7..."
        aws s3 cp "s3://${S3_BUCKET}/jdk-7u291-linux-x64.rpm" ./jdk-7u291-linux-x64.rpm
        
        # Download enterprise_home.tgz
        echo "Downloading enterprise_home.tgz..."
        aws s3 cp "s3://${S3_BUCKET}/enterprise_home.tgz" ./enterprise_home.tgz
        
        # Optionally download patch
        if aws s3 ls "s3://${S3_BUCKET}/p18178044_111220_Linux-x86-64.zip" > /dev/null 2>&1; then
          echo "Downloading patch 18178044..."
          mkdir -p patches
          aws s3 cp "s3://${S3_BUCKET}/p18178044_111220_Linux-x86-64.zip" ./patches/
        fi
        
        echo "✓ Successfully downloaded all required files"
    
    - name: Build Docker image
      run: |
        echo "Building Oracle Forms 11g Docker image..."
        # Files are already downloaded, just build
        docker build -t "$IMAGE_NAME:$IMAGE_TAG" .
        docker tag "$IMAGE_NAME:$IMAGE_TAG" "$IMAGE_NAME:11.1.2"
        docker tag "$IMAGE_NAME:$IMAGE_TAG" "$IMAGE_NAME:11g"
        docker tag "$IMAGE_NAME:$IMAGE_TAG" "$IMAGE_NAME:latest"
    
    - name: Test Docker image
      run: |
        echo "Running image tests..."
        # Run basic tests first
        ./test/test-basic.sh
        # TODO: Enable full tests once Forms runtime environment is complete
        # ./test/test-forms-compiler.sh --image "$IMAGE_NAME" --tag "$IMAGE_TAG"
        # ./test/test-jdapi.sh --image "$IMAGE_NAME" --tag "$IMAGE_TAG"
    
    - name: Log in to GitHub Container Registry
      if: github.event_name == 'push' || github.event.inputs.push_to_registry == 'true'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Push to GitHub Container Registry
      if: github.event_name == 'push' || github.event.inputs.push_to_registry == 'true'
      run: |
        REGISTRY="${{ github.event.inputs.registry || 'ghcr.io' }}"
        REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
        
        # Tag images for registry
        docker tag "${IMAGE_NAME}:${IMAGE_TAG}" "${REGISTRY}/${REPO_OWNER}/${IMAGE_NAME}:${IMAGE_TAG}"
        docker tag "${IMAGE_NAME}:${IMAGE_TAG}" "${REGISTRY}/${REPO_OWNER}/${IMAGE_NAME}:11.1.2"
        docker tag "${IMAGE_NAME}:${IMAGE_TAG}" "${REGISTRY}/${REPO_OWNER}/${IMAGE_NAME}:11g"
        docker tag "${IMAGE_NAME}:${IMAGE_TAG}" "${REGISTRY}/${REPO_OWNER}/${IMAGE_NAME}:latest"
        
        # Push all tags
        docker push "${REGISTRY}/${REPO_OWNER}/${IMAGE_NAME}:${IMAGE_TAG}"
        docker push "${REGISTRY}/${REPO_OWNER}/${IMAGE_NAME}:11.1.2"
        docker push "${REGISTRY}/${REPO_OWNER}/${IMAGE_NAME}:11g"
        docker push "${REGISTRY}/${REPO_OWNER}/${IMAGE_NAME}:latest"
        
        echo "✓ Images pushed to ${REGISTRY}/${REPO_OWNER}/${IMAGE_NAME}"
    
    - name: Create build summary
      if: always()
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Image:** \`${IMAGE_NAME}:${IMAGE_TAG}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Build Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ job.status }}" == "success" ]; then
          echo "### Available Tags:" >> $GITHUB_STEP_SUMMARY
          echo "- \`${IMAGE_NAME}:${IMAGE_TAG}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${IMAGE_NAME}:11.1.2\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${IMAGE_NAME}:11g\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${IMAGE_NAME}:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event_name }}" == "push" ] || [ "${{ github.event.inputs.push_to_registry }}" == "true" ]; then
            REGISTRY="${{ github.event.inputs.registry || 'ghcr.io' }}"
            REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
            echo "### Registry Images:" >> $GITHUB_STEP_SUMMARY
            echo "- \`${REGISTRY}/${REPO_OWNER}/${IMAGE_NAME}:${IMAGE_TAG}\`" >> $GITHUB_STEP_SUMMARY
            echo "- \`${REGISTRY}/${REPO_OWNER}/${IMAGE_NAME}:11.1.2\`" >> $GITHUB_STEP_SUMMARY
            echo "- \`${REGISTRY}/${REPO_OWNER}/${IMAGE_NAME}:11g\`" >> $GITHUB_STEP_SUMMARY
            echo "- \`${REGISTRY}/${REPO_OWNER}/${IMAGE_NAME}:latest\`" >> $GITHUB_STEP_SUMMARY
          fi
        fi

  build-local:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Note about local build
      run: |
        echo "## Local Build Option" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "To build with a local enterprise_home.tgz file:" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "./build.sh --file /path/to/enterprise_home.tgz" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "This workflow builds using S3. For local file builds, run the build script locally." >> $GITHUB_STEP_SUMMARY